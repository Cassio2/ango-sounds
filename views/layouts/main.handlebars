<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title> <!-- O título pode ser dinâmico -->
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/style.css">
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css'>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" /><link rel="stylesheet" href="./style.css">



</head>

<body>
    <!-- START NAVR BAR -->
    <div>
        <nav class="navbar navbar-dark navbar-expand-lg fixed-top navbarHome" aria-label="Dark offcanvas navbar">
            <div class="container-fluid">
                <a class="navbar-brand me-auto img-nav" href="/">
                    <h1 class="m-0"><i> <img src="#" alt="logo" /></i>
                    </h1>
                </a>

                <div class="offcanvas offcanvas-end text-bg-dark" tabindex=-1 id="offcanvasNavbarDark"
                    aria-labelledby="offcanvasNavbarDarkLabel">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbarDarkLabel">
                            <img src="public/logo.png" alt="logo" />
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas"
                            aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav justify-content-center flex-grow-1 pe-3">
                            <li class="nav-item navborder ${borderVisible ? '' : 'no-border'">
                                <a class="linkBorder nav-link mx-lg-2 bb" style="color: #ffffff" aria-current="page"
                                    href="#hero">Home</a>
                            </li>

                            <li class="nav-item dropdown navborder ${borderVisible ? '' : 'no-border'}`}">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                                    aria-expanded="false" style="color: #ffffff">Sobre</a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="sobre-nos.html#sobreNos">Sobre nós</a></li>
                                    <li><a class="dropdown-item" href="galeria.html#galeria">Galeria</a></li>
                                    <li><a class="dropdown-item" href="">Portfolio</a></li>
                                </ul>
                            </li>

                            {{!-- <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                                    aria-expanded="false">Serviços </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="ti.html#ti">TI</a></li>
                                    <li><a class="dropdown-item" href="maritimo.html#maritimo">Serviços Marítimos</a>
                                    </li>
                                    <li><a class="dropdown-item" href="construcao-civil.html#civil">Construção Civil</a>
                                    </li>
                                </ul>
                            </li> --}}


                            <li class="nav-item navborder $borderVisible ? '' : 'no-border'">
                                <a class="linkBorder nav-link mx-lg-2" style="color: #ffffff"
                                    href="#projectos">Distribuição</a>
                            </li>

                            <li class="nav-item navborder $borderVisible ? '' : 'no-border'">
                                <a class="linkBorder nav-link mx-lg-2" style="color: #ffffff"
                                    href="contactos.html#contactos">Precificação</a>
                            </li>

                            <li class="nav-item navborder $borderVisible ? '' : 'no-border'">
                                <a class="linkBorder nav-link mx-lg-2" style="color: #ffffff"
                                    href="contactos.html#contactos">Blogue</a>
                            </li>

                            <li class="nav-item navborder $borderVisible ? '' : 'no-border'">
                                <a class="linkBorder nav-link mx-lg-2" style="color: #ffffff"
                                    href="contactos.html#contactos">Iniciar sessão</a>
                            </li>

                        </ul>
                    </div>
                </div>

                <a href="#" class="login-buttom">Começar</a>

                <button class="navbar-toggler bg-dark" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasNavbarDark" aria-controls="offcanvasNavbarDark"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </nav>
    </div>

    {{{body}}} <!-- O conteúdo da página será injetado aqui -->


    <!-- START FOOTER -->
    <footer class="py-4">
	<div class="container">
		<div class="row justify-content-between pt-4 pb-3 pb-lg-5">
			<div class="col-12 col-lg-7">
				<a href=""><img alt="Logo" class="img-fluid mb-3" height="" src="" width="300"></a>
				<p class="mb-3">Aproveite ao máximo as oportunidades de distribuição, e faça com que sua música ou
                     conteúdo seja ouvido e descoberto por pessoas do mundo inteiro!.</p>
				<div class="mb-3">
					<a class="me-2" href=""><svg class="bi bi-pinterest text-primary" fill="currentColor" height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
					<path d="M8 0a8 8 0 0 0-2.915 15.452c-.07-.633-.134-1.606.027-2.297.146-.625.938-3.977.938-3.977s-.239-.479-.239-1.187c0-1.113.645-1.943 1.448-1.943.682 0 1.012.512 1.012 1.127 0 .686-.437 1.712-.663 2.663-.188.796.4 1.446 1.185 1.446 1.422 0 2.515-1.5 2.515-3.664 0-1.915-1.377-3.254-3.342-3.254-2.276 0-3.612 1.707-3.612 3.471 0 .688.265 1.425.595 1.826a.24.24 0 0 1 .056.23c-.061.252-.196.796-.222.907-.035.146-.116.177-.268.107-1-.465-1.624-1.926-1.624-3.1 0-2.523 1.834-4.84 5.286-4.84 2.775 0 4.932 1.977 4.932 4.62 0 2.757-1.739 4.976-4.151 4.976-.811 0-1.573-.421-1.834-.919l-.498 1.902c-.181.695-.669 1.566-.995 2.097A8 8 0 1 0 8 0z"></path></svg></a> <a class="me-2" href=""><svg class="bi bi-twitter text-primary" fill="currentColor" height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
					<path d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"></path></svg></a> <a class="me-2" href=""><svg class="bi bi-facebook text-primary" fill="currentColor" height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
					<path d="M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z"></path></svg></a>
				</div>
			</div>
			<div class="col-12 col-lg-2 small text-lg-end mb-4 md-lg-0 pt-1">
				<p class="mb-1"><a class="text-dark text-decoration-none" href="">Home</a></p>
				<p class="mb-1"><a class="text-dark text-decoration-none" href="">Blog</a></p>
				<p class="mb-1"><a class="text-dark text-decoration-none" href="">Sobre</a></p>
				<p class="mb-0"><a class="text-dark text-decoration-none" href="">Contactos</a></p>
			</div>
			<div class="col-12 col-lg-3 pt-1 small text-lg-end">
				<p class="mb-1">Angoola</p>
				<p class="mb-1">aNGOLA, lUANDA</p>
				<p class="mb-1">Tel: +244 939 422 890</p>
				<p class="mb-0"><a class="text-dark text-decoration-none" href="">angosound@gmail.com</a></p>
			</div>
		</div>
		<div class="border-top d-lg-none"></div>
		<div class="d-lg-flex justify-content-between py-3">
			<div class="small">
				<span class="d-block d-lg-inline text-muted mb-2 mb-lg-0 me-lg-5">© 2025 AngoSound. Todos os direitos reservados.</span> <a class="d-block d-lg-inline text-muted mb-2 mb-lg-0 me-lg-5" href="">Termo de privacidade</a> <a class="d-block d-lg-inline text-muted mb-2 mb-lg-0 me-lg-5" href="">Nossos serviços</a>
			</div>
			<div class="small">
				<span class="text-muted"><a class="text-muted" href="">Desenvolvido pela AngoSound</a></span>
			</div>
		</div>
	</div>
</footer>

    <script>
        // MUDAR A COR DO NAVBAR COM O SCROLL
        window.addEventListener("scroll", function () {
            const navbar = document.querySelector(".navbarHome");
            if (window.scrollY > 50) { // Alterar a cor após rolar 50px
                navbar.style.backgroundColor = "#091E3E"; // Cor desejada com opacidade
            } else {
                navbar.style.backgroundColor = "transparent"; // Cor padrão
            }
        });

        // Poem text
        const kiplingPoem = `<p>Acreditamos que todo<span>artista</span> tem uma história para contar e que 
sua música merece ser ouvida em todos os cantos do mundo. 
 Com nossa plataforma de distribuição digital, ajudamos você a colocar suas    
músicas nas maiores plataformas, como Spotify, Apple Music, Deezer, YouTube Music e muito mais.

 <span>Seu talento, nosso compromisso!</span>
 Distribuímos suas faixas de forma rápida, segura e profissional,
garantindo que seu som chegue ao público certo e gere os royalties que você merece.
Seja independente, alcance novos públicos e transforme sua paixão em carreira.


A música tem o poder de emocionar, conectar e transformar vidas. Se você 
é um artista independente ou uma gravadora buscando alcançar um público
 maior, nossa plataforma de distribuição digital 
é a ponte entre sua arte e milhões de ouvintes ao redor do mundo.

A música tem o poder de emocionar, contar histórias e conectar pessoas.
 Mas para que sua arte alcance o mundo, ela precisa estar nos lugares certos.
  É aqui que entramos! Somos a plataforma ideal para artistas independentes,
   gravadoras e produtores que desejam distribuir suas músicas para
    todas as principais plataformas de streaming, de forma rápida, segura e sem complicações.


Nosso serviço permite que sua música esteja disponível em
 todas as plataformas digitais mais importantes do mundo. 
 Com poucos cliques, suas faixas podem ser ouvidas
  por milhões de pessoas ao redor do planeta.
   
</p>`;

        // Function to insert poem into divs
        function insertPoemIntoDivs() {
            // Get all .text divs
            const textDivs = document.querySelectorAll(".text");

            // Insert poem into all .text divs
            textDivs.forEach((div) => {
                div.innerHTML = kiplingPoem;
            });
        }

        // Call the function when the DOM is fully loaded
        document.addEventListener("DOMContentLoaded", insertPoemIntoDivs);

        const contentDiv = document.querySelector(".content");
        function adjustContentSize() {
            const viewportWidth = window.innerWidth;
            const baseWidth = 1000;
            const scaleFactor =
                viewportWidth < baseWidth ? (viewportWidth / baseWidth) * 0.8 : 1;
            contentDiv.style.transform = `scale(${scaleFactor})`;
        }
        window.addEventListener("load", adjustContentSize);
        window.addEventListener("resize", adjustContentSize);


// MUSIC AUDIO 
/* ------------------------- Helper Functions ------------------------- */
const getDomElement = (baseElement = document, cssSelector = "") =>
baseElement.querySelector(cssSelector);

const convertSecsToMins = secs => {
  return (secs / 60).toFixed(2);
};

/* ------------------------------ Songs Data ---------------------------- */
const songs = [
{
  title: "Musica e vida",
  artist: "João Miguel",
  url:
  "https://raw.githubusercontent.com/5hraddha/misc/master/images/songs/take-me-home.mp3" },

{
  title: "Eu estarei lá para você",
  artist: "The Rembrandts",
  url:
  "https://raw.githubusercontent.com/5hraddha/misc/master/images/songs/i-will-be-there-for-you.mp3" },

{
  title: "Conte Comigo",
  artist: "Bruno Mars",
  url:
  "https://raw.githubusercontent.com/5hraddha/misc/master/images/songs/count-on-me.mp3" },

{
  title: "Feliz",
  artist: "Pharrell Williams",
  url:
  "https://raw.githubusercontent.com/5hraddha/misc/master/images/songs/happy.mp3" }];



/* ------------------------- Select DOM Elements ------------------------- */
const musicPlayer = getDomElement(document, ".cardMusic");
const musicalNotes = musicPlayer.querySelectorAll(".music-notes");
const playerDisc = getDomElement(musicPlayer, ".disc");
const playerDiscArm = getDomElement(musicPlayer, ".disc-arm");
const playBtn = getDomElement(musicPlayer, ".player-controls__play");
const playBtnIcon = getDomElement(playBtn, ".material-symbols-rounded");
const playBtnWaveAnimation = getDomElement(playBtn, ".js-wave");
const previousBtn = getDomElement(musicPlayer, ".player-controls__prev");
const nextBtn = getDomElement(musicPlayer, ".player-controls__next");
const audioElement = getDomElement(musicPlayer, ".audio");
const songTitle = getDomElement(musicPlayer, ".song__title");
const songArtist = getDomElement(musicPlayer, ".song__artist");
const songDurationLapsed = getDomElement(musicPlayer, ".song-duration__lapsed");
const songDurationTotal = getDomElement(musicPlayer, ".song-duration__total");

// Current song index
let currentSongIndex = 0;

// Load song once the music player is loaded
const loadSong = song => {
  songTitle.textContent = song.title;
  songArtist.textContent = song.artist;
  audioElement.src = song.url;
};

// Play a song
const playSong = (playBtn, audioElement) => {
  playBtn.classList.add("js-play");
  playBtnWaveAnimation.classList.add("wave");
  playerDisc.classList.add("disc_play");
  playerDiscArm.classList.add("disc-arm_play");
  musicalNotes.forEach(note => note.classList.add("music-notes_play"));
  playBtnIcon.textContent = "pause";
  setTimeout("audioElement.play()", 500);
};

// Pause a song
const pauseSong = (playBtn, audioElement) => {
  playBtn.classList.remove("js-play");
  playBtnWaveAnimation.classList.remove("wave");
  playerDisc.classList.remove("disc_play");
  playerDiscArm.classList.remove("disc-arm_play");
  musicalNotes.forEach(note => note.classList.remove("music-notes_play"));
  playBtnIcon.textContent = "play_arrow";
  audioElement.pause();
};

// Get song's total duration after the it's metadata is loaded
const handleLoadedAudioMetadata = (event, songTotalDurationElement) => {
  const songDurationInSecs = event.target.duration;
  songTotalDurationElement.textContent = convertSecsToMins(songDurationInSecs);
};

// Play or pause the song whenever the play button is clicked
const handlePlayButton = (playBtn, audioElement) => {
  const isSongPlaying = playBtn.classList.contains("js-play");
  isSongPlaying ?
  pauseSong(playBtn, audioElement) :
  playSong(playBtn, audioElement);
};

// Go to the previous song whenever the previous button is clicked
const handlePreviousBtn = () => {
  currentSongIndex--;
  if (currentSongIndex < 0) {
    currentSongIndex = songs.length - 1;
  }
  loadSong(songs[currentSongIndex]);
  playSong(playBtn, audioElement);
};

// Go to the next song whenever the previous button is clicked
const handleNextBtn = () => {
  currentSongIndex++;
  if (currentSongIndex == songs.length) {
    currentSongIndex = 0;
  }
  loadSong(songs[currentSongIndex]);
  playSong(playBtn, audioElement);
};

// Play the next song when the current song has ended
const handleCurrentSongEnded = () => handleNextBtn();

// Update the current song duration when the song is playing
const handleUpdateProgress = (event, songLapsedDurationElement) => {
  const { currentTime, duration } = event.target;
  songLapsedDurationElement.textContent = convertSecsToMins(currentTime);
};

// Add Event Listeners
playBtn.addEventListener("click", () =>
handlePlayButton(playBtn, audioElement));

previousBtn.addEventListener("click", handlePreviousBtn);
nextBtn.addEventListener("click", handleNextBtn);
audioElement.addEventListener("timeupdate", event => {
  handleUpdateProgress(event, songDurationLapsed);
});
audioElement.addEventListener("ended", handleCurrentSongEnded);
audioElement.onloadedmetadata = (event) =>
handleLoadedAudioMetadata(event, songDurationTotal);

// Load song
loadSong(songs[currentSongIndex]);


    </script>

    <script src="/bootstrap/js/bootstrap.bundle.min.js"></script>

</body>

</html>